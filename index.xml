<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hello World !!!</title>
    <link>https://ujjwalaryal.github.io/</link>
    <description>Recent content on Hello World !!!</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 17 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ujjwalaryal.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C Obfuscate Program Series - 1</title>
      <link>https://ujjwalaryal.github.io/blog/c-obsfucate-1/</link>
      <pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ujjwalaryal.github.io/blog/c-obsfucate-1/</guid>
      <description>Can you try to find output of the following program? (I will update the solution within someday.)
Program #include&amp;lt;stdio.h&amp;gt; #include&amp;lt;string.h&amp;gt; int main(){ int n,i,s; scanf(&amp;quot;%d&amp;quot;,&amp;amp;n); char a[] =&amp;quot;*****************************************************************&amp;quot;; char b[] =&amp;quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&amp;quot;; char ii[] =&amp;quot;iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii&amp;quot;; printf(&amp;quot;%s\n&amp;quot;, (a + (sizeof(char) * (65 - n * 2 + 1)))); for(i = 1,s = 2 * n - 1 - 4; i &amp;lt; n; i++,s -= 2){ printf(&amp;quot;%s%s%s%s%s\n&amp;quot;, b + sizeof(char) * (65 - i), &amp;quot;*&amp;quot;, ii + sizeof(char) * (65 - s), (i!</description>
    </item>
    
    <item>
      <title>A New Formula of Combination !!!(need to update latex)</title>
      <link>https://ujjwalaryal.github.io/blog/new-formula-of-combination/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ujjwalaryal.github.io/blog/new-formula-of-combination/</guid>
      <description>Combination is a selection of items from a collection, such that (unlike permutations) the order of selection does not matter. More formally, a k-combination of a set S is a subset of k distinct elements of S. If the set has n elements, the number of k-combinations is equal to the binomial coefficient.
which can be written using factorials as whenever k\leq n, and which is zero when k&amp;gt;n. The set of all k-combinations of a set S is often denoted by {\displaystyle \textstyle {\binom {S}{k}}}.</description>
    </item>
    
    <item>
      <title>Redefining Solutions to Some Problems</title>
      <link>https://ujjwalaryal.github.io/blog/redifining-solutions/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ujjwalaryal.github.io/blog/redifining-solutions/</guid>
      <description>Have you ever tried to solve any problems in the coolest way possible??? Lets look back at some problems that we have already solved but try to devise COOLEST solutions.
Problem 1 In this problem, you need to print the pattern of the following form containing the numbers from 1 to n. This question was taken from HackerRank.
Example: For n = 7:
7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 6 6 6 6 6 6 6 6 6 6 7 7 6 5 5 5 5 5 5 5 5 5 6 7 7 6 5 4 4 4 4 4 4 4 5 6 7 7 6 5 4 3 3 3 3 3 4 5 6 7 7 6 5 4 3 2 2 2 3 4 5 6 7 7 6 5 4 3 2 1 2 3 4 5 6 7 7 6 5 4 3 2 2 2 3 4 5 6 7 7 6 5 4 3 3 3 3 3 4 5 6 7 7 6 5 4 4 4 4 4 4 4 5 6 7 7 6 5 5 5 5 5 5 5 5 5 6 7 7 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7  and so on.</description>
    </item>
    
    <item>
      <title>Largest of two distinct numbers without using any conditional statements or operators</title>
      <link>https://ujjwalaryal.github.io/blog/largest-of-two-numbers/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ujjwalaryal.github.io/blog/largest-of-two-numbers/</guid>
      <description>Given two positive and distinct numbers, the task is to find the greatest of two given numbers without using any conditional statements(if…) and operators(?: in C/C++/Java). Examples  Input : a = 14, b = 15
Output : 15 Input: a = 1233133, b = 124
Output: 1233133  Solution The approach is to return the value on the basis of the below expression:
a * (bool)(a / b) + b * (bool)(b / a)</description>
    </item>
    
    <item>
      <title>Extract ‘k’ bits from a given position in a number</title>
      <link>https://ujjwalaryal.github.io/blog/extract-k-bits-from-p-position/</link>
      <pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ujjwalaryal.github.io/blog/extract-k-bits-from-p-position/</guid>
      <description>How to extract ‘k’ bits from a given position ‘p’ in a number? Examples   Input : number = 171
k = 5
p = 2
Output : The extracted number is 21 171 is represented as 0101011 in binary, so, you should get only 10101 i.e. 21.
  Input : number = 72
k = 5
p = 1
Output : The extracted number is 8 72 is represented as 1001000 in binary, so, you should get only 01000 i.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://ujjwalaryal.github.io/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ujjwalaryal.github.io/about/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>